{"version":3,"sources":["data.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["data","applicationId","appStatus","childForms","id","name","type","externalClassName","fields","description","displayName","isRequired","isReadOnly","selectListItems","maxLength","value","App","onSubmit","useCallback","viewModel","console","log","onBackButton","requestModel","handleBack","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8LAEaA,EAAqB,CAChCC,cAAe,kBACfC,UAAW,IACXC,WAAY,CACV,CACEC,GAAI,uCACJC,KAAM,UACNC,KAAM,WACNC,kBAAmB,GACnBC,OAAQ,CACN,CACEC,YAAa,GACbC,YAAa,KACbJ,KAAM,GACNK,YAAY,EACZC,YAAY,EACZC,gBAAiB,GACjBC,UAAW,EACXT,KAAM,QACNU,MAAO,Q,OCEFC,MAnBf,WACE,IAAMC,EAAWC,uBAAY,SAACC,GAC5BC,QAAQC,IAAIF,KACX,IAEGG,EAAeJ,uBAAY,cAAU,IAE3C,OACE,8BACE,cAAC,IAAD,CACEK,aAAcvB,EACdG,WAAYH,EAAKG,WACjBc,SAAUA,EACVO,WAAYF,OCHLG,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.f132009b.chunk.js","sourcesContent":["import { RequestModel } from \"@curo/dynamic-ui-components\"\r\n\r\nexport const data: RequestModel = {\r\n  applicationId: \"CARD-0000000334\",\r\n  appStatus: \"3\",\r\n  childForms: [\r\n    {\r\n      id: \"1cfcd6ec-c5be-47c9-8cfa-3999467a0cf7\",\r\n      name: \"cardApp\",\r\n      type: \"editable\",\r\n      externalClassName: \"\",\r\n      fields: [\r\n        {\r\n          description: \"\",\r\n          displayName: \"id\",\r\n          type: 24,\r\n          isRequired: false,\r\n          isReadOnly: false,\r\n          selectListItems: [],\r\n          maxLength: 0,\r\n          name: \"Mitek\",\r\n          value: \"\",\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n}\r\n","import { DynamicForm } from \"@curo/dynamic-ui-components\"\nimport { useCallback } from \"react\"\nimport { data } from \"./data\"\n\nfunction App() {\n  const onSubmit = useCallback((viewModel: any) => {\n    console.log(viewModel)\n  }, [])\n\n  const onBackButton = useCallback(() => {}, [])\n\n  return (\n    <div>\n      <DynamicForm\n        requestModel={data}\n        childForms={data.childForms}\n        onSubmit={onSubmit}\n        handleBack={onBackButton}\n      />\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}